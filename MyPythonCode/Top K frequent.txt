class Solution(object):
    def topKFrequent(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: List[int]
        """
        freq={}
        freq_list=[]
        for i in nums:
            if i not in freq:
                freq[i]=1
            else:
                freq[i]=freq[i]+1
        
        for i in freq:
            freq_list.append([freq[i],i])
        
        ans=maxheap(freq_list)
        
        result=[]
        
        for i in range(k):
            result.append(extract(ans))
        
        return result
        
def heapify(A,i):
    l=2*i+1
    r=2*i+2
    
    largest=A[i][0]
    
    if (l<=len(A)-1 and A[i][0]<A[l][0]):
        largest=l
    else:
        largest=i
    if (r<=len(A)-1 and A[largest][0]<A[r][0]):
        largest=r
    if i!=largest:
        temp=A[i]
        A[i]=A[largest]
        A[largest]=temp
        heapify(A,largest)

def maxheap(A):
    i=(len(A)/2)-1
    while (i>=0):
        heapify(A,i)
        i=i-1
    return A

def extract(A):
    max=A[0][1]
    A[0]=A[len(A)-1]
    del A[len(A)-1]
    heapify(A,0)
    return max
