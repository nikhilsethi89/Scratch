# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def isValidBST(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        

        sortedlist=[]
        return self.traverse(root,sortedlist)
        
        ##if (len(sortedlist))==0:
         ##   return False
      
        
    def traverse(self,root,sortedlist):
        ##if len(sortedlist)>1 and sortedlist[-1]<=sortedlist[-2]:
          ##  return False
        
        if root==None:
            return True
        if self.traverse(root.left,sortedlist)==False:
            return False
        if len(sortedlist)>=1 and sortedlist[-1]>=root.val:
            return False
        sortedlist.append(root.val)
        if self.traverse(root.right,sortedlist)==False:
            return False
        return True
        
        