Given a binary tree, return all root-to-leaf paths.

For example, given the following binary tree:

   1
 /   \
2     3
 \
  5
All root-to-leaf paths are:

["1->2->5", "1->3"]

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def binaryTreePaths(self, root):
        """
        :type root: TreeNode
        :rtype: List[str]
        """
        if root==None:
            return []
        path=""        
        result=[]
        self.helper(root,path,result)
        return result
    
    def helper(self,node,path,result):
        
        path=path+str(node.val)
        
        if node.left==None and node.right==None:
            result.append(path)
        if node.left:
            self.helper(node.left,path+"->",result)
        if node.right:
            self.helper(node.right,path+"->",result)
        
            