Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2.

Note:

The length of both num1 and num2 is < 110.
Both num1 and num2 contains only digits 0-9.
Both num1 and num2 does not contain any leading zero.
You must not use any built-in BigInteger library or convert the inputs to integer directly.

class Solution(object):
    def multiply(self, num1, num2):
        """
        :type num1: str
        :type num2: str
        :rtype: str
        """

        
        if num1=='0' or num2=='0':
            return '0'
        if num1=='1':
            return num2
        if num2=='1':
            return num1
        
        i=len(num1)-1
        
        ans=0
        
        while i>=0:
            carry=0
            sum='0'*(len(num1)-i-1)
            j=len(num2)-1
            while j>=0:
                temp=(int(num1[i])*int(num2[j]))+carry
                carry=temp/10
                sum=str(temp%10)+sum
                j=j-1
            sum=str(carry)+sum
            ans+=int(sum)
            i=i-1
        

        return str(ans)
                
				